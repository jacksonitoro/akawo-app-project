// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  password    String
  transactions Transaction[]
  budgets     Budget[]
  savings     Saving[]
  createdAt   DateTime   @default(now())
}

model Transaction {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  amount      Float
  type        TransactionType
  category    Category?  @relation(fields: [categoryId], references: [id])
  categoryId  String?
  createdAt   DateTime   @default(now())
}

model Budget {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  category    Category?  @relation(fields: [categoryId], references: [id])
  categoryId  String?
  amount      Float
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime   @default(now())
}

model Category {
  id          String     @id @default(uuid())
  name        String     @unique
  transactions Transaction[]
  budgets     Budget[]
  createdAt   DateTime   @default(now())
}

model Saving {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  goalAmount  Float
  savedAmount Float      @default(0.0)
  targetDate  DateTime
  createdAt   DateTime   @default(now())
}

enum TransactionType {
  INCOME
  EXPENSE
}


